{"version":3,"sources":["components/Formulario.jsx","components/Cita.jsx","App.js","index.js"],"names":["Formulario","crearCita","useState","mascota","propietario","fecha","hora","sintomas","cita","actualizarCita","error","actualizarError","actualizarState","e","target","name","value","className","onSubmit","preventDefault","trim","id","uuidv4","type","placeholder","onChange","Cita","eliminarCita","onClick","App","citasIniciales","JSON","parse","localStorage","getItem","citas","guardarCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2MA4GeA,EAzGI,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACLC,mBAAS,CACtCC,QAAS,GACTC,YAAa,GACbC,MAAO,GACPC,KAAM,GACNC,SAAU,KANwB,mBAC7BC,EAD6B,KACvBC,EADuB,OASHP,oBAAS,GATN,mBAS7BQ,EAT6B,KAStBC,EATsB,KAW9BC,EAAkB,SAACC,GACvBJ,EAAe,2BACVD,GADS,kBAEXK,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,UAItBb,EAAgDK,EAAhDL,QAASC,EAAuCI,EAAvCJ,YAAaC,EAA0BG,EAA1BH,MAAOC,EAAmBE,EAAnBF,KAAMC,EAAaC,EAAbD,SA+B3C,OACE,kBAAC,WAAD,KACE,0CACCG,EACC,uBAAGO,UAAU,gBAAb,qCACE,KACJ,0BAAMC,SAnCS,SAACL,GAClBA,EAAEM,iBAGmB,KAAnBhB,EAAQiB,QACe,KAAvBhB,EAAYgB,QACK,KAAjBf,EAAMe,QACU,KAAhBd,EAAKc,QACe,KAApBb,EAASa,QAMXT,GAAgB,GAEhBH,EAAKa,GAAKC,cAEVrB,EAAUO,GAEVC,EAAe,CACbN,QAAS,GACTC,YAAa,GACbC,MAAO,GACPC,KAAM,GACNC,SAAU,MAfVI,GAAgB,KA0Bd,kDACA,2BACEY,KAAK,OACLR,KAAK,UACLE,UAAU,eACVO,YAAY,iBACZC,SAAUb,EACVI,MAAOb,IAET,kDACA,2BACEoB,KAAK,OACLR,KAAK,cACLE,UAAU,eACVO,YAAY,kBACZC,SAAUb,EACVI,MAAOZ,IAET,wCACA,2BACEmB,KAAK,OACLR,KAAK,QACLE,UAAU,eACVQ,SAAUb,EACVI,MAAOX,IAET,uCACA,2BACEkB,KAAK,OACLR,KAAK,OACLE,UAAU,eACVQ,SAAUb,EACVI,MAAOV,IAET,8CACA,8BACES,KAAK,WACLE,UAAU,eACVQ,SAAUb,EACVI,MAAOT,IAET,4BAAQgB,KAAK,SAASN,UAAU,+BAAhC,mBClFOS,EAhBF,SAAC,GAAD,IAAElB,EAAF,EAAEA,KAAMmB,EAAR,EAAQA,aAAR,OACT,yBAAKV,UAAU,QACX,wCAAa,8BAAOT,EAAKL,SAAzB,KACA,4CAAiB,8BAAOK,EAAKJ,aAA7B,KACA,sCAAW,8BAAOI,EAAKH,OAAvB,KACA,qCAAU,8BAAOG,EAAKF,MAAtB,KACA,yCAAc,8BAAOE,EAAKD,UAA1B,KAEA,4BACIU,UAAU,+BACVW,QAAS,kBAAMD,EAAanB,EAAKa,MAFrC,mBC2COQ,MAjDf,WACE,IAAIC,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,UAEhDJ,IACHA,EAAiB,IAJN,MAOiB5B,mBAAS4B,GAP1B,mBAONK,EAPM,KAOCC,EAPD,KASbC,qBAAU,WACJP,EACFG,aAAaK,QAAQ,QAASP,KAAKQ,UAAUJ,IAE7CF,aAAaK,QAAQ,QAASP,KAAKQ,UAAU,OAG9C,CAACJ,EAAOL,IAEX,IAIMH,EAAe,SAACN,GACpB,IAAMmB,EAAcL,EAAMM,QAAO,SAACjC,GAAD,OAAUA,EAAKa,KAAOA,KACvDe,EAAaI,IAGTE,EAA0B,IAAjBP,EAAMQ,OAAe,eAAiB,oBAErD,OACE,kBAAC,WAAD,KACE,0DACA,yBAAK1B,UAAU,aACb,yBAAKA,UAAU,OACb,yBAAKA,UAAU,mBACb,kBAAC,EAAD,CAAYhB,UAjBJ,SAACO,GACjB4B,EAAa,GAAD,mBAAKD,GAAL,CAAY3B,SAkBlB,yBAAKS,UAAU,mBACb,4BAAKyB,GACJP,EAAMS,KAAI,SAACpC,GAAD,OACT,kBAAC,EAAD,CAAMqC,IAAKrC,EAAKa,GAAIb,KAAMA,EAAMmB,aAAcA,YCvC5DmB,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.e2921190.chunk.js","sourcesContent":["import React, { Fragment, useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nconst Formulario = ({ crearCita }) => {\n  const [cita, actualizarCita] = useState({\n    mascota: \"\",\n    propietario: \"\",\n    fecha: \"\",\n    hora: \"\",\n    sintomas: \"\",\n  });\n\n  const [error, actualizarError] = useState(false);\n\n  const actualizarState = (e) => {\n    actualizarCita({\n      ...cita,\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  const { mascota, propietario, fecha, hora, sintomas } = cita;\n\n  const submitCita = (e) => {\n    e.preventDefault();\n\n    if (\n      mascota.trim() === \"\" ||\n      propietario.trim() === \"\" ||\n      fecha.trim() === \"\" ||\n      hora.trim() === \"\" ||\n      sintomas.trim() === \"\"\n    ) {\n      actualizarError(true);\n      return;\n    }\n\n    actualizarError(false);\n\n    cita.id = uuidv4();\n\n    crearCita(cita);\n\n    actualizarCita({\n      mascota: \"\",\n      propietario: \"\",\n      fecha: \"\",\n      hora: \"\",\n      sintomas: \"\",\n    });\n  };\n\n  return (\n    <Fragment>\n      <h2>Crear Cita</h2>\n      {error ? (\n        <p className=\"alerta-error\">Todos los campos son obligatorios</p>\n      ) : null}\n      <form onSubmit={submitCita}>\n        <label>Nombre Mascotas</label>\n        <input\n          type=\"text\"\n          name=\"mascota\"\n          className=\"u-full-width\"\n          placeholder=\"Nombre mascota\"\n          onChange={actualizarState}\n          value={mascota}\n        />\n        <label>Nombre Dueño</label>\n        <input\n          type=\"text\"\n          name=\"propietario\"\n          className=\"u-full-width\"\n          placeholder=\"Nombre dueño\"\n          onChange={actualizarState}\n          value={propietario}\n        />\n        <label>Fecha</label>\n        <input\n          type=\"date\"\n          name=\"fecha\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={fecha}\n        />\n        <label>Hora</label>\n        <input\n          type=\"time\"\n          name=\"hora\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={hora}\n        />\n        <label>Síntomas</label>\n        <textarea\n          name=\"sintomas\"\n          className=\"u-full-width\"\n          onChange={actualizarState}\n          value={sintomas}\n        ></textarea>\n        <button type=\"submit\" className=\"u-full-width button-primary\">\n          Agregar Cita\n        </button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default Formulario;\n","import React from 'react'\n\nconst Cita = ({cita, eliminarCita}) => ( \n    <div className=\"cita\">\n        <p> Mascota: <span>{cita.mascota}</span> </p>\n        <p> Propietario: <span>{cita.propietario}</span> </p>\n        <p> Fecha: <span>{cita.fecha}</span> </p>\n        <p> Hora: <span>{cita.hora}</span> </p>\n        <p> Sintomas: <span>{cita.sintomas}</span> </p>\n\n        <button\n            className=\"button eliminar u-full-width\"\n            onClick={() => eliminarCita(cita.id)}\n        >Eliminar &times;</button>\n    </div>\n);\n\n \nexport default Cita;","import React, { Fragment, useState, useEffect } from \"react\";\nimport Formulario from \"./components/Formulario\";\nimport Cita from \"./components/Cita\";\n\nfunction App() {\n  let citasIniciales = JSON.parse(localStorage.getItem(\"citas\"));\n\n  if (!citasIniciales) {\n    citasIniciales = [];\n  }\n\n  const [citas, guardarCitas] = useState(citasIniciales);\n\n  useEffect(() => {\n    if (citasIniciales) {\n      localStorage.setItem(\"citas\", JSON.stringify(citas));\n    } else {\n      localStorage.setItem(\"citas\", JSON.stringify([]));\n    }\n\n  }, [citas, citasIniciales]);\n\n  const crearCita = (cita) => {\n    guardarCitas([...citas, cita]);\n  };\n\n  const eliminarCita = (id) => {\n    const nuevasCitas = citas.filter((cita) => cita.id !== id);\n    guardarCitas(nuevasCitas);\n  };\n\n  const titulo = citas.length === 0 ? \"No hay citas\" : \"Administrar Citas\";\n\n  return (\n    <Fragment>\n      <h1>Administrador de Pacientes</h1>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"one-half column\">\n            <Formulario crearCita={crearCita} />\n          </div>\n          <div className=\"one-half column\">\n            <h2>{titulo}</h2>\n            {citas.map((cita) => (\n              <Cita key={cita.id} cita={cita} eliminarCita={eliminarCita} />\n            ))}\n          </div>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}